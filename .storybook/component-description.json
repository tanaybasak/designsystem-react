{"Actions":{"description":"","displayName":"Actions","methods":[],"props":{"actions":{"type":{"name":"array"},"required":true,"description":""}}},"Breadcrumb":{"description":"","displayName":"Breadcrumb","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"Unique Id","defaultValue":{"value":"''","computed":false}},"activeIndex":{"type":{"name":"number"},"required":false,"description":"dafault active breadcrumb item","defaultValue":{"value":"0","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of Breadcrumb","defaultValue":{"value":"''","computed":false}},"onSelection":{"type":{"name":"func"},"required":false,"description":"Callback function on selecting item\n\n@signature\n* ```item``` : selected item obj for breadcrumb\n* ```event``` : click event","defaultValue":{"value":"() => {}","computed":false}},"displayMax":{"type":{"name":"number"},"required":false,"description":"number of Breadcrumb items to be displayed","defaultValue":{"value":"3","computed":false}}}},"BreadcrumbItem":{"description":"","displayName":"BreadcrumbItem","methods":[],"props":{"href":{"type":{"name":"string"},"required":false,"description":"```hyperlink``` : The URL of the link","defaultValue":{"value":"''","computed":false}},"itemClass":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the breadcrumb item","defaultValue":{"value":"''","computed":false}},"active":{"type":{"name":"bool"},"required":false,"description":"@ignore","defaultValue":{"value":"false","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"Callback function on selecting item - (to be deprecated soon, instead use onSelection in Breadcrumb component )\n\n@signature\n```event``` : callback event upon click","defaultValue":{"value":"() => {}","computed":false}}}},"Button":{"description":"","displayName":"Button","methods":[],"props":{"children":{"type":{"name":"any"},"required":false,"description":"button content","defaultValue":{"value":"'Click Me'","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'primary-danger'","computed":false},{"value":"'secondary'","computed":false},{"value":"'secondary-danger'","computed":false},{"value":"'ghost'","computed":false},{"value":"'neutral'","computed":false},{"value":"'warning'","computed":false}]},"required":false,"description":"type of button","defaultValue":{"value":"'primary'","computed":false}},"kind":{"type":{"name":"enum","value":[{"value":"'button'","computed":false},{"value":"'submit'","computed":false},{"value":"'reset'","computed":false}]},"required":false,"description":"kind of button  eg : button, submit, reset","defaultValue":{"value":"'button'","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Style class of the component","defaultValue":{"value":"''","computed":false}},"small":{"type":{"name":"bool"},"required":false,"description":"small button","defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Disable Button","defaultValue":{"value":"false","computed":false}}}},"Checkbox":{"description":"","displayName":"Checkbox","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Custom class on the Checkbox wrapper.","defaultValue":{"value":"''","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Disable Checkbox","defaultValue":{"value":"false","computed":false}},"label":{"type":{"name":"string"},"required":false,"description":"Text for Checkbox Label.","defaultValue":{"value":"''","computed":false}},"tooltipTitle":{"type":{"name":"string"},"required":false,"description":"Tooltip Text for Checkbox Label.","defaultValue":{"value":"null","computed":false}},"tooltipDirection":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'bottom'","computed":false},{"value":"'left'","computed":false},{"value":"'right'","computed":false}]},"required":false,"description":"Tooltip Direction eg: top, bottom, left, right","defaultValue":{"value":"'bottom'","computed":false}},"id":{"type":{"name":"string"},"required":true,"description":"Unique string for the Checkbox."},"indeterminate":{"type":{"name":"bool"},"required":false,"description":"indeterminate state for Checkbox","defaultValue":{"value":"false","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Accepts event handler as prop/argument.\n\n@signature\n```event```: sends a callback event","defaultValue":{"value":"() => {}","computed":false}},"checked":{"type":{"name":"bool"},"required":false,"description":"Control Checked state for Checkbox","defaultValue":{"value":"false","computed":false}},"name":{"type":{"name":"string"},"required":false,"description":"Unique identifier used within forms."},"value":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Text value to be considered when submitting forms."}}},"DataTable":{"description":"","displayName":"DataTable","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"Unique id","defaultValue":{"value":"null","computed":false}},"type":{"type":{"name":"string"},"required":false,"description":"Used to define the table type\n* ```borderless``` : with no borders\n* ```compact``` : Compact Table\n* ```tall``` : Tall Table\n* ```zebra``` : Row striping.\n\neg :\n```\ntype = \"borderless compact zebra\"\n```","defaultValue":{"value":"''","computed":false}},"tableData":{"type":{"name":"array"},"required":false,"description":"Data record array to be displayed","defaultValue":{"value":"[]","computed":false}},"tableConfig":{"type":{"name":"arrayOf","value":{"name":"shape","value":{"label":{"name":"string","required":false},"field":{"name":"string","required":true},"sortable":{"name":"bool","required":false},"width":{"name":"string","required":false},"pinned":{"name":"enum","value":[{"value":"'right'","computed":false},{"value":"'left'","computed":false}],"required":false},"allowResize":{"name":"bool","required":false},"minResizeWidth":{"name":"number","required":false},"maxResizeWidth":{"name":"number","required":false},"renderHtml":{"name":"func","required":false},"columnHtml":{"name":"node","required":false},"headerCellClass":{"name":"string","required":false},"bodyCellClass":{"name":"string","required":false}}}},"required":false,"description":"Column Configuration\n\n* ```label``` : Column Header\n* ```field``` : Column key which is present in the ***tableData*** props\n* ```sortable``` : ***boolean*** value to show sorting icon\n* ```width``` : minimum width for the column in px\n* ```renderHtml``` : For passing Custom Html\n* ```columnHtml``` : For passing custom html in the column header\n* ```pinned``` : Pass ***'right'*** to pin column right side or pass ***'left'*** to pin column left side\n* ```allowResize``` : ***boolean*** value to make column resizable\n* ```minResizeWidth``` : ***number*** value to specify minimum resize width.\n* ```maxResizeWidth``` : ***number*** value to specify maximum resize width.\n* ```headerCellClass``` : For passing custom class name for <th> under <thead> element\n* ```bodyCellClass``` : For passing custom class name for <td> under <tbody> element\n\n\neg :\n\n```\n[ {\n   label : 'Name',\n   field : 'name',\n   sortable:true,\n   width:'100px',\n   renderHtml: (model)=> {return <span>{model.name}</span>} ,\n   columnHtml: ( <Search ariaLabel=\"Search\" className=\"\"defaultValue=\"\" iconTheme=\"default\" />) ,\n   pinned: 'right' ,\n   allowResize: true ,\n   minResizeWidth: 40,\n   maxResizeWidth: 120,\n   headerCellClass: 'custom-class-name',\n   bodyCellClass: 'custom-class-name',\n}]\n```","defaultValue":{"value":"[]","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Name of the custom class to apply to the Data Table.","defaultValue":{"value":"''","computed":false}},"onSort":{"type":{"name":"func"},"required":false,"description":"Call back function on Sorting\n\n@signature\n* ```column``` : sorted column ***field*** name\n* ```order``` : sorting order\n* ```data``` : table data","defaultValue":{"value":"() => {}","computed":false}},"onRowSelect":{"type":{"name":"func"},"required":false,"description":"Call back function on selecting row\n\n@signature\n```data``` : selected Table row data","defaultValue":{"value":"() => {}","computed":false}},"expandRowTemplate":{"type":{"name":"func"},"required":false,"description":"@ignore","defaultValue":{"value":"null","computed":false}},"headerSelection":{"type":{"name":"node"},"required":false,"description":"Used for passing template for Table header\n\nHeader of the column with ***field*** value ***\"checkbox\"*** will be replaced by the below template.\nMainly Used for showing checkbox on Table Header to provide select all features\n\neg :\n\n```\nheaderSelection={\n   <Checkbox aria-label=\"header checkbox\" id={`header_checkbox`} />\n}\n\n```","defaultValue":{"value":"null","computed":false}},"triStateSorting":{"type":{"name":"bool"},"required":false,"description":"When this property is set, sorting in each column iterates through three sort states: **ascending**, **descending**, and **unsort**.","defaultValue":{"value":"false","computed":false}},"columnDraggable":{"type":{"name":"bool"},"required":false,"description":"When this property is set, columns become draggable and can be swiched with other column","defaultValue":{"value":"false","computed":false}},"showDraggableIcon":{"type":{"name":"bool"},"required":false,"description":"When this property is set, icon for coloumn reorder will apprear; default value is ***'true'***","defaultValue":{"value":"true","computed":false}},"resizable":{"type":{"name":"bool"},"required":false,"description":"To Enable resize for all table columns. For individual column configuration, check ***tableConfig***'s ***allowResize*** prop.","defaultValue":{"value":"false","computed":false}},"isHeaderSticky":{"type":{"name":"bool"},"required":false,"description":"For Sticky Headers.","defaultValue":{"value":"false","computed":false}},"onColumnAfterResize":{"type":{"name":"func"},"required":false,"description":"Event after Column Resize.\n\n@signature\n```column config``` : resized column configuration object","defaultValue":{"value":"() => {}","computed":false}},"initSortedColumn":{"type":{"name":"shape","value":{"order":{"name":"string","required":false},"name":{"name":"string","required":false}}},"required":false,"description":"Used to initialize the sorting icon.\n\n* ```order``` : sorting order. possible values are **'asc'** and **'desc'**\n* ```name``` : Field Name\n\n```\n{\n   order: 'asc',\n   name: 'name'\n}\n```","defaultValue":{"value":"null","computed":false}},"onColumnReorder":{"type":{"name":"func"},"required":false,"description":"onColumnReorder will be tiggered on each column reorder and receive updated tableConfig as parameter\n\n@signature\n```tableconfig``` : table configuration object","defaultValue":{"value":"() => {}","computed":false}},"uniqueKey":{"type":{"name":"string"},"required":false,"description":"Unique Key name from the table data.\nIt can be *id* , *key*, *uuid* etc.\n\neg :\n```\nuniqueKey: 'id',\n\n```","defaultValue":{"value":"'id'","computed":false}},"selectedItem":{"type":{"name":"object"},"required":false,"description":"This is used for highlighting the rows\n eg:\n```\n{[id]: true }\n```"},"showDraggableIconOnHover":{"type":{"name":"bool"},"required":false,"description":"Column ReOrder icon will appear on Hover","defaultValue":{"value":"false","computed":false}},"removeHeaderNowrap":{"type":{"name":"bool"},"required":false,"description":"Used to remove nowwrap style from header title","defaultValue":{"value":"false","computed":false}},"multiSort":{"type":{"name":"bool"},"required":false,"description":"Enable multi-sort functionality in Columns","defaultValue":{"value":"false","computed":false}},"resizer":{"type":{"name":"bool"},"required":false,"description":"Table Resizer"},"row_focus":{"type":{"name":"bool"},"required":false,"description":"Focus for table row","defaultValue":{"value":"false","computed":false}},"cell_focus":{"type":{"name":"bool"},"required":false,"description":"Focus for table cell","defaultValue":{"value":"true","computed":false}}}},"Dropdown":{"description":"","displayName":"Dropdown","methods":[],"props":{"type":{"type":{"name":"string"},"required":false,"description":"Type of dropdown eg : top, bottom","defaultValue":{"value":"'bottom'","computed":false}},"items":{"type":{"name":"array"},"required":true,"description":"Array of items eg:\n\n```\n[\n   {id: 'option-1',text: 'Option 1'},\n   {id: 'option-2', text: 'Option 2'}\n]\n```"},"dropdownType":{"type":{"name":"string"},"required":false,"description":"Type of dropdown eg : multiselect, singleselect","defaultValue":{"value":"''","computed":false}},"label":{"type":{"name":"string"},"required":false,"description":"Label for Dropdown","defaultValue":{"value":"'Select Option'","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback function on selecting item\n\n@signature\n* ```item``` : Object returns id and text value\n* ```list``` : List of the selected Item incase of MultiSelect Dropdown","defaultValue":{"value":"() => {}","computed":false}},"selectedItem":{"type":{"name":"union","value":[{"name":"string"},{"name":"array"}]},"required":false,"description":"id of item for default selection"},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of Dropdown","defaultValue":{"value":"''","computed":false}},"config":{"type":{"name":"any"},"required":false,"description":"Configuration Object for updating propery name in items data","defaultValue":{"value":"{}","computed":false}},"attachElementToBody":{"type":{"name":"bool"},"required":false,"description":"Used to attach the dropdown container to body","defaultValue":{"value":"false","computed":false}},"scrollListner":{"type":{"name":"bool"},"required":false,"description":"Dropdown Container position will changed on scroll. This is applicable when Dropdown container is attached to body","defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Disabled property for dropdown","defaultValue":{"value":"false","computed":false}},"onVisibleChange":{"type":{"name":"func"},"required":false,"description":"Callback on dropdown toggle\n\n@signature\n```isOpen``` : boolean flag","defaultValue":{"value":"null","computed":false}}}},"FormHelperText":{"description":"","displayName":"FormHelperText","methods":[],"props":{"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"''","computed":false}},"htmlFor":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"''","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"() => {}","computed":false}}}},"Heading":{"description":"","displayName":"Heading","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Custom class on the Checkbox wrapper.","defaultValue":{"value":"''","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'h1'","computed":false},{"value":"'h2'","computed":false},{"value":"'h3'","computed":false},{"value":"'h4'","computed":false},{"value":"'h5'","computed":false},{"value":"'h6'","computed":false}]},"required":false,"description":"Type of html elements : eg: h1, h2, h3, h4, h5, h6","defaultValue":{"value":"'h2'","computed":false}}}},"Icon":{"description":"","displayName":"Icon","methods":[],"props":{"type":{"type":{"name":"enum","value":[{"value":"'img'","computed":false},{"value":"'svg'","computed":false}]},"required":true,"description":"Used to define the type of icon"},"alt":{"type":{"name":"string"},"required":true,"description":"Specifies an alternate text for an image"},"title":{"type":{"name":"string"},"required":true,"description":"A tooltip text for an element"},"className":{"type":{"name":"string"},"required":false,"description":"Icon classname","defaultValue":{"value":"''","computed":false}},"src":{"type":{"name":"custom","raw":"check"},"required":false,"description":"Specifies the path to the image","defaultValue":{"value":"null","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"Callback function on click\n\n@event : callback on click","defaultValue":{"value":"() => {}","computed":false}},"children":{"type":{"name":"custom","raw":"check"},"required":false,"description":"used to pass svg content","defaultValue":{"value":"null","computed":false}}}},"InPageNavigation":{"description":"","displayName":"InPageNavigation","methods":[],"props":{"listItems":{"type":{"name":"arrayOf","value":{"name":"shape","value":{"label":{"name":"string","required":false},"link":{"name":"string","required":false}}}},"required":true,"description":"List items for Timeline\neg:\n\n```\n[\n   {label : 'Overview', link: 'Overview'}\n]\n```"}}},"InlineEdit":{"description":"","displayName":"InlineEdit","methods":[],"props":{"onClose":{"type":{"name":"func"},"required":false,"description":"A callback function which will be executed once close or esc button is clicked.\n\n@signature\n```event``` : callback event on close button click","defaultValue":{"value":"() => {}","computed":false}},"onTextUpdate":{"type":{"name":"func"},"required":false,"description":"A callback function which will be executed once check or Enter button is clicked.\n\n@signature\n```updatedContent``` : updated content value is sent via callback.","defaultValue":{"value":"() => {}","computed":false}},"errorMessage":{"type":{"name":"any"},"required":false,"description":"Error message content which has to be displayed.","defaultValue":{"value":"null","computed":false}},"customIcon":{"type":{"name":"element"},"required":false,"description":"Used to pass custom button template","defaultValue":{"value":"null","computed":false}},"loader":{"type":{"name":"bool"},"required":false,"description":"loader is shown upon click","defaultValue":{"value":"false","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of Select","defaultValue":{"value":"null","computed":false}},"children":{"type":{"name":"element"},"required":false,"description":"Used to pass inline element. eg DateSelector, TextInput, Dropdown","defaultValue":{"value":"null","computed":false}}}},"Label":{"description":"","displayName":"Label","methods":[],"props":{"children":{"type":{"name":"node"},"required":false,"description":"Content for label","defaultValue":{"value":"null","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of Label","defaultValue":{"value":"''","computed":false}},"htmlFor":{"type":{"name":"string"},"required":false,"description":"Unique identifier for Label component.","defaultValue":{"value":"''","computed":false}}}},"Link":{"description":"","displayName":"Link","methods":[],"props":{"children":{"type":{"name":"node"},"required":false,"description":"Link content","defaultValue":{"value":"null","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the link","defaultValue":{"value":"''","computed":false}},"href":{"type":{"name":"string"},"required":false,"description":"```hyperlink``` : The URL of the link","defaultValue":{"value":"'#'","computed":false}}}},"List":{"description":"","displayName":"List","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the list","defaultValue":{"value":"''","computed":false}},"type":{"type":{"name":"string"},"required":false,"description":"type of lists for ordered:\n* decimal\n* upper-alpha\n* lower-alpha\n* lower-roman\n* upper-roman;\n\ntype of lists for unordered:\n\n* circle\n* square\n* disc","defaultValue":{"value":"'disc'","computed":false}},"listItems":{"type":{"name":"array"},"required":false,"description":"Data for list","defaultValue":{"value":"[]","computed":false}}}},"LoadingState":{"description":"","displayName":"LoadingState","methods":[],"props":{"type":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'breadcrumb'","computed":false},{"value":"'accordion'","computed":false},{"value":"'datatable'","computed":false},{"value":"'tab'","computed":false},{"value":"'slider'","computed":false}]},"required":false,"description":"type of loading state eg : default , breadcrumb , accordion , datatable, tab, slider","defaultValue":{"value":"'default'","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of Loading State","defaultValue":{"value":"''","computed":false}},"width":{"type":{"name":"string"},"required":false,"description":"Width of loading State. Use this props for default Loading state","defaultValue":{"value":"null","computed":false}},"height":{"type":{"name":"string"},"required":false,"description":"Height of loading State. Use this props for default Loading state","defaultValue":{"value":"null","computed":false}}}},"Item":{"description":"","displayName":"Item","methods":[],"props":{"item":{"type":{"name":"any"},"required":false,"description":"Item will return on click of the Menu Item","defaultValue":{"value":"{}","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"@ignore","defaultValue":{"value":"() => {}","computed":false}},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"@ignore","defaultValue":{"value":"() => {}","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Used to disable the menu item","defaultValue":{"value":"false","computed":false}},"danger":{"type":{"name":"bool"},"required":false,"description":"Used to apply danger style to menu item","defaultValue":{"value":"false","computed":false}},"separator":{"type":{"name":"bool"},"required":false,"description":"Used to add a separator in menu item","defaultValue":{"value":"false","computed":false}},"children":{"type":{"name":"any"},"required":false,"description":"Used to pass children","defaultValue":{"value":"null","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Used to pass custom classname","defaultValue":{"value":"''","computed":false}}}},"MenuList":{"description":"","displayName":"MenuList","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of MenuList","defaultValue":{"value":"''","computed":false}}}},"Notification":{"description":"","displayName":"Notification","methods":[],"props":{"title":{"type":{"name":"string"},"required":false,"description":"Notification Title","defaultValue":{"value":"''","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'danger'","computed":false},{"value":"'info'","computed":false},{"value":"'success'","computed":false},{"value":"'warning'","computed":false}]},"required":true,"description":"Notification Type. eg :  danger, info, success, warning"},"subtitle":{"type":{"name":"node"},"required":false,"description":"Notification Sub Title","defaultValue":{"value":"''","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of Notification","defaultValue":{"value":"''","computed":false}},"icon":{"type":{"name":"element"},"required":false,"description":"Notification Icon","defaultValue":{"value":"null","computed":false}},"closable":{"type":{"name":"bool"},"required":false,"description":"to show close icon in notification","defaultValue":{"value":"true","computed":false}},"visible":{"type":{"name":"bool"},"required":true,"description":"to show notification"},"onClose":{"type":{"name":"func"},"required":false,"description":"Callback to invoke when a notification is closed.\n\n@signature\n```event```: callback event is sent.","defaultValue":{"value":"() => {}","computed":false}}}},"Overlay":{"description":"","displayName":"Overlay","methods":[],"props":{"children":{"type":{"name":"element"},"required":false,"description":"Used to pass overlay content","defaultValue":{"value":"null","computed":false}},"showOverlay":{"type":{"name":"bool"},"required":false,"description":"Used to toggle overlay content","defaultValue":{"value":"false","computed":false}},"targetElement":{"type":{"name":"object"},"required":false,"description":"target element where overlay to be positioned","defaultValue":{"value":"null","computed":false}},"direction":{"type":{"name":"enum","value":[{"value":"'top-right'","computed":false},{"value":"'top-left'","computed":false},{"value":"'bottom-right'","computed":false},{"value":"'bottom-left'","computed":false}]},"required":false,"description":"Direction of overlay content","defaultValue":{"value":"'bottom-left'","computed":false}},"scrollListner":{"type":{"name":"bool"},"required":false,"description":"Overlay content position will change on scroll when attachElementToBody property is true","defaultValue":{"value":"false","computed":false}},"onToggle":{"type":{"name":"func"},"required":false,"description":"Callback function used to toggle the overlay content\n\n@signature\n* ```status``` : boolean value is sent\n* ```type``` : type of click (inside/outside).\n* ```direction``` : direction of the click.","defaultValue":{"value":"() => {}","computed":false}},"attachElementToBody":{"type":{"name":"bool"},"required":false,"description":"Used to attach element to body tag","defaultValue":{"value":"false","computed":false}},"closeOnEscape":{"type":{"name":"bool"},"required":false,"description":"onToggle callback will trigger on click of escape key","defaultValue":{"value":"false","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Used to pass custom classname","defaultValue":{"value":"''","computed":false}},"preventCloseElements":{"type":{"name":"array"},"required":false,"description":"used to provide elements, where overlay content will not removed on click of these elements","defaultValue":{"value":"null","computed":false}}}},"Pager":{"description":"","displayName":"Pager","methods":[],"props":{"options":{"type":{"name":"array"},"required":false,"description":"","defaultValue":{"value":"[]","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"''","computed":false}},"arialabel":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"''","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"() => {}","computed":false}},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"() => {}","computed":false}},"value":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}}}},"Pagination":{"description":"","displayName":"Pagination","methods":[],"props":{"totalItems":{"type":{"name":"number"},"required":false,"description":"Total number of items to be shown in Pagination Component.","defaultValue":{"value":"0","computed":false}},"itemsPerPageStepper":{"type":{"name":"number"},"required":false,"description":"Stepper value which is incremented in multiples of 2 with the previous value.","defaultValue":{"value":"20","computed":false}},"itemsStepperLimit":{"type":{"name":"number"},"required":false,"description":"Number within which Step Numbers are generated.","defaultValue":{"value":"100","computed":false}},"itemsValuesPerPage":{"type":{"name":"arrayOf","value":{"name":"number"}},"required":false,"description":"Array values for options","defaultValue":{"value":"null","computed":false}},"itemsPerPageText":{"type":{"name":"string"},"required":false,"description":"Text to display to the left of the No. of items Dropdown","defaultValue":{"value":"'Items per Page:'","computed":false}},"itemsPerPageInfoText":{"type":{"name":"string"},"required":false,"description":"Text to display to the itemsPerPageInfo","defaultValue":{"value":"'items'","computed":false}},"pagePrepositionText":{"type":{"name":"string"},"required":false,"description":"Text to display to the page Preposition","defaultValue":{"value":"'of'","computed":false}},"pageNumberInfoText":{"type":{"name":"string"},"required":false,"description":"Text to display to the page Number Info","defaultValue":{"value":"'pages'","computed":false}},"noItemDisplayText":{"type":{"name":"string"},"required":false,"description":"Text to display when totalItem is zero","defaultValue":{"value":"'No items to display'","computed":false}},"onItemsPerPageChange":{"type":{"name":"func"},"required":false,"description":"Accepts Event handler as argument/prop which is triggered after Items Per Page Dropdown is changed.\n\n@signature\n* ```itemPerPage``` :  item per page value\n* ```currentPageNo``` : current Page Selected value","defaultValue":{"value":"() => {}","computed":false}},"onPageChange":{"type":{"name":"func"},"required":false,"description":"Accepts Event handler as argument/prop which is triggered after Page Drop-down is changed.\n\n@signature\n* ```currentPageNo``` : current Page Selected value\n* ```itemPerPage``` :  item per page value","defaultValue":{"value":"() => {}","computed":false}},"currentPage":{"type":{"name":"number"},"required":false,"description":"current active Page number","defaultValue":{"value":"1","computed":false}},"itemsPerPageToSelect":{"type":{"name":"number"},"required":false,"description":"itemsPerPageToSelect - The value to be selected from itemsPerPage dropdown","defaultValue":{"value":"null","computed":false}},"position":{"type":{"name":"shape","value":{"left":{"name":"arrayOf","value":{"name":"string"},"required":false},"right":{"name":"arrayOf","value":{"name":"string"},"required":false}}},"required":false,"description":"position - Holds the customisable content names to be placed in left and right side of pagination. If empty object, nothing will be rendered","defaultValue":{"value":"{\n  left: ['itemsPerPageSelection', 'itemsPerPageInfo'],\n  right: ['pageNumberInfo', 'pageNumberSelection']\n}","computed":false}}}},"Paragraph":{"description":"","displayName":"Paragraph","methods":[],"props":{"children":{"type":{"name":"any"},"required":false,"description":"Paragraph Content","defaultValue":{"value":"null","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Style class of the component","defaultValue":{"value":"''","computed":false}}}},"Password":{"description":"","displayName":"Password","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Additional class name to be given to <input> tag.","defaultValue":{"value":"''","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Specifying the <input> tag is disabled or not.","defaultValue":{"value":"false","computed":false}},"id":{"type":{"name":"string"},"required":false,"description":"Unique Id for the <input> tag."},"placeholder":{"type":{"name":"string"},"required":false,"description":"Placeholder text for the <input> tag."},"value":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Value of the input field."},"defaultValue":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The default Value of the field on rendering."},"tooltipMessage":{"type":{"name":"shape","value":{"showPassword":{"name":"string","required":false},"hidePassword":{"name":"string","required":false}}},"required":false,"description":"Used to provide custom message for tooltip","defaultValue":{"value":"{\n  showPassword: 'Show Password',\n  hidePassword: 'Hide Password'\n}","computed":false}}}},"CircleProgressIndicator":{"description":"","displayName":"CircleProgressIndicator","methods":[],"props":{"progress":{"type":{"name":"number"},"required":false,"description":"value of the progressbar ranging from 0 to 1","defaultValue":{"value":"0","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'determinate'","computed":false},{"value":"'indeterminate'","computed":false}]},"required":false,"description":"type of the progressbar (eg : determinate / indeterminate)","defaultValue":{"value":"'determinate'","computed":false}},"label":{"type":{"name":"union","value":[{"name":"string"},{"name":"element"}]},"required":false,"description":"label of the progressbar","defaultValue":{"value":"null","computed":false}},"labelPosition":{"type":{"name":"enum","value":[{"value":"'left'","computed":false},{"value":"'right'","computed":false},{"value":"'top'","computed":false},{"value":"'bottom'","computed":false}]},"required":false,"description":"labelPosition of the progressbar (eg : left/right/top/bottom)","defaultValue":{"value":"'right'","computed":false}},"customContent":{"type":{"name":"union","value":[{"name":"string"},{"name":"element"}]},"required":false,"description":"customContent of the progressbar (html element)","defaultValue":{"value":"null","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of Progressbar","defaultValue":{"value":"''","computed":false}},"progressSize":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'default'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"Size of Progressbar","defaultValue":{"value":"'default'","computed":false}}}},"LinearProgressIndicator":{"description":"","displayName":"LinearProgressIndicator","methods":[],"props":{"progress":{"type":{"name":"number"},"required":false,"description":"value of the progressbar ranging from 0 to 1","defaultValue":{"value":"0","computed":false}},"label":{"type":{"name":"union","value":[{"name":"string"},{"name":"element"}]},"required":false,"description":"label of the progressbar is placed in topleft of the progressbar","defaultValue":{"value":"null","computed":false}},"subText":{"type":{"name":"union","value":[{"name":"string"},{"name":"element"}]},"required":false,"description":"subtext for the progressbar is placed in bottomleft of the progressbar","defaultValue":{"value":"null","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'determinate'","computed":false},{"value":"'indeterminate'","computed":false}]},"required":false,"description":"type of the progressbar (eg : determinate / indeterminate)","defaultValue":{"value":"'determinate'","computed":false}},"customContent":{"type":{"name":"union","value":[{"name":"string"},{"name":"element"}]},"required":false,"description":"customContent of the progressbar is placed in topright of the progressbar (html element)","defaultValue":{"value":"null","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of Progressbar","defaultValue":{"value":"''","computed":false}}}},"Radio":{"description":"","displayName":"Radio","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Custom class on the Radio wrapper.","defaultValue":{"value":"''","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Disable Radio","defaultValue":{"value":"false","computed":false}},"labelText":{"type":{"name":"string"},"required":false,"description":"Text for Radio Label.","defaultValue":{"value":"''","computed":false}},"id":{"type":{"name":"string"},"required":false,"description":"Unique identifier of the element."},"tooltipTitle":{"type":{"name":"string"},"required":false,"description":"Tooltip Text for Checkbox Label.","defaultValue":{"value":"null","computed":false}},"tooltipDirection":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'bottom'","computed":false},{"value":"'left'","computed":false},{"value":"'right'","computed":false}]},"required":false,"description":"Tooltip Direction eg: top, bottom, left, right","defaultValue":{"value":"'bottom'","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Event to subscribe when the Input field is clicked.\n\n@signature\n* ```value``` : radio value\n* ```event``` : on change event","defaultValue":{"value":"() => {}","computed":false}},"checked":{"type":{"name":"bool"},"required":false,"description":"Control Checked state for Radio"},"name":{"type":{"name":"string"},"required":false,"description":"Name of radio element"},"value":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Text value to be considered when submitting forms."}}},"RadioGroup":{"description":"","displayName":"RadioGroup","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Custom class on the Radio wrapper.","defaultValue":{"value":"''","computed":false}},"orientation":{"type":{"name":"string"},"required":false,"description":"vertical or horizontal type","defaultValue":{"value":"'horizontal'","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Accepts event handler as prop/argument.","defaultValue":{"value":"() => {}","computed":false}},"defaultSelected":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":true,"description":"defaultSelected to be considered when submitting forms."},"children":{"type":{"name":"node"},"required":true,"description":"self Children i.e Tab Component."}}},"Search":{"description":"","displayName":"Search","methods":[],"props":{"type":{"type":{"name":"enum","value":[{"value":"'clickable'","computed":false},{"value":"'default'","computed":false}]},"required":false,"description":"Type of Search\n* ```default``` : Normal Search\n* ```clickable``` : Clickable/Header Search","defaultValue":{"value":"'default'","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'default'","computed":false}]},"required":false,"description":"Size of Search\n* ```default``` : Normal Search\n* ```small``` : applying small search styles","defaultValue":{"value":"'default'","computed":false}},"theme":{"type":{"name":"enum","value":[{"value":"'white'","computed":false},{"value":"'default'","computed":false}]},"required":false,"description":"used for changing the background color of search component\n* ```default``` : Normal Search with grey background\n* ```white``` : applying white background in the search text field","defaultValue":{"value":"'default'","computed":false}},"iconTheme":{"type":{"name":"enum","value":[{"value":"'white'","computed":false},{"value":"'default'","computed":false}]},"required":false,"description":"used for changing the color of search icon\n* ```default``` : Normal Search\n* ```white``` : applying white color to the search icon","defaultValue":{"value":"'default'","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of Search","defaultValue":{"value":"''","computed":false}},"defaultValue":{"type":{"name":"string"},"required":false,"description":"Default value","defaultValue":{"value":"''","computed":false}},"placeholder":{"type":{"name":"string"},"required":false,"description":"Placeholder for the search text field","defaultValue":{"value":"'Search...'","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"call back function which will return the entered character\n\n@signature\n```value``` : search value","defaultValue":{"value":"() => {}","computed":false}},"onBlur":{"type":{"name":"func"},"required":false,"description":"call back function triggered on focus out","defaultValue":{"value":"() => {}","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Specifying the component is disabled or not.","defaultValue":{"value":"false","computed":false}},"ariaLabel":{"type":{"name":"string"},"required":false,"description":"Used to define a string that labels the component."}}},"Select":{"description":"","displayName":"Select","methods":[],"props":{"label":{"type":{"name":"string"},"required":false,"description":"Label for select, if this props is not passed no label will appear.","defaultValue":{"value":"null","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Call back which will be invoked when selection is made.\n\n@signature\n```item``` : Object returns value and text.","defaultValue":{"value":"() => {}","computed":false}},"id":{"type":{"name":"string"},"required":false,"description":"Unique identifier for select component.","defaultValue":{"value":"null","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of Select","defaultValue":{"value":"''","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Disable select, if this props is not passed the select won't disable.","defaultValue":{"value":"false","computed":false}}}},"SelectItem":{"description":"","displayName":"SelectItem","methods":[],"props":{"value":{"type":{"name":"string"},"required":false,"description":"Specify the value of the <SelectItem>","defaultValue":{"value":"''","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Specify whether the <SelectItem> should be disabled","defaultValue":{"value":"false","computed":false}},"hidden":{"type":{"name":"bool"},"required":false,"description":"Specify whether the <SelectItem> is hidden","defaultValue":{"value":"false","computed":false}},"text":{"type":{"name":"string"},"required":false,"description":"Provide the contents of <SelectItem>","defaultValue":{"value":"''","computed":false}}}},"SelectItemGroup":{"description":"","displayName":"SelectItemGroup","methods":[],"props":{"children":{"type":{"name":"node"},"required":false,"description":"Provide the contents of <SelectItemGroup>"},"label":{"type":{"name":"string"},"required":false,"description":"Label for select, if this props is not passed no label will appear.","defaultValue":{"value":"''","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Specify whether the <SelectItemGroup> should be disabled","defaultValue":{"value":"false","computed":false}}}},"Slider":{"description":"","displayName":"Slider","methods":[],"props":{"min":{"type":{"name":"number"},"required":false,"description":"Specifies the minimum value allowed","defaultValue":{"value":"0","computed":false}},"max":{"type":{"name":"number"},"required":false,"description":"Specifies the maximum value allowed","defaultValue":{"value":"100","computed":false}},"step":{"type":{"name":"number"},"required":false,"description":"Specifies the number intervals","defaultValue":{"value":"1","computed":false}},"value":{"type":{"name":"number"},"required":false,"description":"Specifies the value of slider","defaultValue":{"value":"0","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Style class of the component","defaultValue":{"value":"''","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback function on changing the value of slider\n\n@signature\n```value``` : slider value","defaultValue":{"value":"() => {}","computed":false}},"withInputBox":{"type":{"name":"bool"},"required":false,"description":"Flag to show input box\n* ```true``` : display input field\n* ```false``` : hide input field","defaultValue":{"value":"true","computed":false}},"label":{"type":{"name":"string"},"required":false,"description":"Title for the Slider","defaultValue":{"value":"null","computed":false}},"errorMessage":{"type":{"name":"object"},"required":false,"description":"Used for passing custom error message","defaultValue":{"value":"{\n  step: null,\n  max: null,\n  min: null,\n  invalid: null\n}","computed":false}},"helperText":{"type":{"name":"string"},"required":false,"description":"Specifies helper text","defaultValue":{"value":"null","computed":false}},"id":{"type":{"name":"string"},"required":false,"description":"Unique Id","defaultValue":{"value":"''","computed":false}},"hover":{"type":{"name":"bool"},"required":false,"description":"Specifies the tooltip to be shown on hover","defaultValue":{"value":"false","computed":false}},"ariaLabel":{"type":{"name":"string"},"required":false,"description":"Used to define a string that labels the component."}}},"Spinner":{"description":"","displayName":"Spinner","methods":[],"props":{"small":{"type":{"name":"bool"},"required":false,"description":"* ```True``` : Inline loader will be created.\n* ```False``` : Large loader will be created.","defaultValue":{"value":"false","computed":false}},"title":{"type":{"name":"string"},"required":false,"description":"This is for title of spinner","defaultValue":{"value":"''","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of TimePicker","defaultValue":{"value":"''","computed":false}},"label":{"type":{"name":"string"},"required":false,"description":"Specify the label for the small spinner","defaultValue":{"value":"''","computed":false}}}},"Tag":{"description":"","displayName":"Tag","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Custom class for tag","defaultValue":{"value":"''","computed":false}},"children":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Text value for tag","defaultValue":{"value":"''","computed":false}},"text":{"type":{"name":"string"},"required":false,"description":"Text value for tag","defaultValue":{"value":"null","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'secondary'","computed":false}]},"required":false,"description":"Type of Tag eg: 'primary', 'secondary'","defaultValue":{"value":"'primary'","computed":false}},"title":{"type":{"name":"string"},"required":false,"description":"Title to be displayed on hovering Tag","defaultValue":{"value":"''","computed":false}},"tabIndex":{"type":{"name":"number"},"required":false,"description":"Tab index for Tag","defaultValue":{"value":"0","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Boolean value to disable Tag","defaultValue":{"value":"false","computed":false}},"closable":{"type":{"name":"bool"},"required":false,"description":"Boolean value to show or hide close button in Tag","defaultValue":{"value":"false","computed":false}},"onClose":{"type":{"name":"func"},"required":false,"description":"Callback function on close of Tag Component\n\n@signature\n```event``` :  event on click of close","defaultValue":{"value":"null","computed":false}},"thumbnail":{"type":{"name":"object"},"required":false,"description":"Thumbnail for Tag Component as an Object","defaultValue":{"value":"null","computed":false}},"icon":{"type":{"name":"element"},"required":false,"description":"Used for passing tag icon in the right end","defaultValue":{"value":"null","computed":false}}}},"TextArea":{"description":"","displayName":"TextArea","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Additional class name to be given to <input> tag.","defaultValue":{"value":"''","computed":false}},"defaultValue":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The default Value of the field on rendering."},"disabled":{"type":{"name":"bool"},"required":false,"description":"Specifying the <input> tag is disabled or not.","defaultValue":{"value":"false","computed":false}},"id":{"type":{"name":"string"},"required":false,"description":"Unique Id for the <input> tag."},"placeholder":{"type":{"name":"string"},"required":false,"description":"Placeholder text for the <input> tag."},"value":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Value of the input field."}}},"TextInput":{"description":"","displayName":"TextInput","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Additional class name to be given to <input> tag.","defaultValue":{"value":"''","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Specifying the <input> tag is disabled or not.","defaultValue":{"value":"false","computed":false}},"id":{"type":{"name":"string"},"required":false,"description":"Unique Id for the <input> tag."},"placeholder":{"type":{"name":"string"},"required":false,"description":"Placeholder text for the <input> tag."},"value":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Value of the input field."},"defaultValue":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The default Value of the field on rendering."}}},"Tile":{"description":"","displayName":"Tile","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of Tile","defaultValue":{"value":"''","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'clickable'","computed":false},{"value":"'selectable'","computed":false},{"value":"'expandable'","computed":false},{"value":"'readable'","computed":false}]},"required":false,"description":"* ```Readable```: This is for readable Tile.\n* ```Clickable```: This is for clickable Tile.\n* ```Selectable```: This is for selectable Tile.\n* ```Expandable```: This is for expandable Tile.","defaultValue":{"value":"'readable'","computed":false}},"expandableType":{"type":{"name":"string"},"required":false,"description":"expandableType: top or bottom arrow option.","defaultValue":{"value":"'bottom'","computed":false}},"foldContentAbove":{"type":{"name":"node"},"required":false,"description":"Content above expandable tile","defaultValue":{"value":"null","computed":false}},"foldContentBelow":{"type":{"name":"node"},"required":false,"description":"Content below expandable tile","defaultValue":{"value":"null","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Accepts event handler as prop/argument.\n\n@signature\n```toggle``` : expandable tile toggle value","defaultValue":{"value":"() => {}","computed":false}},"children":{"type":{"name":"any"},"required":false,"description":"For Readable, Clickable & Selectable Tile:  \n  Content for tile."},"id":{"type":{"name":"custom","raw":"function (props, propName, componentName) {\n  if (\n    props.hasOwnProperty('type') &&\n    props['type'] === 'expandable' &&\n    typeof props[propName] === 'undefined'\n  ) {\n    return new Error(\n      `The prop \\`${propName}\\` is marked as required in \\`${componentName}\\`, but its value is \\`undefined\\`.`\n    );\n  }\n}"},"required":false,"description":"Unique Identifier for Tile, applicable only for selectable tile."},"href":{"type":{"name":"custom","raw":"function (props, propName, componentName) {\n  if (\n    props.hasOwnProperty('type') &&\n    props['type'] === 'clickable' &&\n    typeof props[propName] === 'undefined'\n  ) {\n    return new Error(\n      `The prop \\`${propName}\\` is marked as required in \\`${componentName}\\`, but its value is \\`undefined\\`.`\n    );\n  }\n}"},"required":false,"description":"Hyperlink refernece which will be activated on click, applicable only for clickable tile."}}},"Toast":{"description":"","displayName":"Toast","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Custom class for Toast Component","defaultValue":{"value":"''","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'danger'","computed":false},{"value":"'info'","computed":false},{"value":"'success'","computed":false},{"value":"'warning'","computed":false}]},"required":true,"description":"Type of Toast Component"},"title":{"type":{"name":"string"},"required":false,"description":"Title for Toast Component","defaultValue":{"value":"''","computed":false}},"subtitle":{"type":{"name":"node"},"required":false,"description":"Subtitle for Toast Component","defaultValue":{"value":"''","computed":false}},"caption":{"type":{"name":"string"},"required":false,"description":"Caption for Toast Component","defaultValue":{"value":"''","computed":false}},"icon":{"type":{"name":"element"},"required":false,"description":"Icon for Toast Component","defaultValue":{"value":"null","computed":false}},"iconDescription":{"type":{"name":"string"},"required":false,"description":"Icon description of Toast Component","defaultValue":{"value":"'Close'","computed":false}},"onClose":{"type":{"name":"func"},"required":false,"description":"Callback function for on close of Toast Component\n\n@signature\n```event``` : event upon clicking on close","defaultValue":{"value":"() => {}","computed":false}},"visible":{"type":{"name":"bool"},"required":true,"description":"Boolean value to show or hide Toast Component"},"closable":{"type":{"name":"bool"},"required":false,"description":"Boolean value to show ot hide close icon from Toast Component","defaultValue":{"value":"false","computed":false}}}},"Toggle":{"description":"","displayName":"Toggle","methods":[],"props":{"small":{"type":{"name":"bool"},"required":false,"description":"Boolean value to change toggle to small","defaultValue":{"value":"false","computed":false}},"labelOff":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Off label for Toggle","defaultValue":{"value":"'Off'","computed":false}},"labelOn":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"On label for Toggle","defaultValue":{"value":"'On'","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Call back function that is invoked when Toggle is clicked\n\n@signature\n* ```value``` : bool value of toggle\n* ```event``` : event when toggled","defaultValue":{"value":"() => {}","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Name of the custom class to apply to the Toggle"},"id":{"type":{"name":"string"},"required":true,"description":"Unique id for Toggle"},"toggled":{"type":{"name":"bool"},"required":false,"description":"Boolean value representing state of Toggle Component","defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Boolean value to disable Toggle","defaultValue":{"value":"false","computed":false}}}},"Tooltip":{"description":"","displayName":"Tooltip","methods":[],"props":{"type":{"type":{"name":"enum","value":[{"value":"'icon'","computed":false},{"value":"'definition'","computed":false},{"value":"'interactive'","computed":false}]},"required":false,"description":"Type of Tooltip\n* ```icon``` : An icon tooltip is used to clarify the action or name of an interactive icon button.\n* ```definition``` : The definition tooltip provides additional help or defines an item or term\n* ```interactive``` : Interactive tooltips may contain rich text and other interactive elements like buttons or links","defaultValue":{"value":"'definition'","computed":false}},"direction":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'bottom'","computed":false},{"value":"'left'","computed":false},{"value":"'right'","computed":false}]},"required":false,"description":"Tooltip Direction eg: top, bottom, left, right","defaultValue":{"value":"'bottom'","computed":false}},"content":{"type":{"name":"union","value":[{"name":"string"},{"name":"node"}]},"required":false,"description":"Tooltip title. Can pass string or html e","defaultValue":{"value":"''","computed":false}}}},"NodeContent":{"description":"","displayName":"NodeContent","methods":[],"props":{"content":{"type":{"name":"any"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}}}},"NodeIcon":{"description":"","displayName":"NodeIcon","methods":[],"props":{"node":{"type":{"name":"object"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}}}},"TextEditor":{"description":"","displayName":"TextEditor","methods":[],"props":{"onClose":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"() => {}","computed":false}},"onTextUpdate":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"() => {}","computed":false}},"formStatus":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"errorMessage":{"type":{"name":"any"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}}}},"TreeInlineEditor":{"description":"","displayName":"TreeInlineEditor","methods":[],"props":{"content":{"type":{"name":"any"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"node":{"type":{"name":"object"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"level":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}}}},"TreeNode":{"description":"","displayName":"TreeNode","methods":[],"props":{"node":{"type":{"name":"object"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"level":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"parentNode":{"type":{"name":"object"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}}}},"TreeNodeTemplate":{"description":"","displayName":"TreeNodeTemplate","methods":[],"props":{"children":{"type":{"name":"any"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}}}},"TreeNodeWrapper":{"description":"","displayName":"TreeNodeWrapper","methods":[],"props":{"node":{"type":{"name":"object"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"level":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"parentNode":{"type":{"name":"object"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"displayChildren":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"hasChildren":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}}}},"TreeView":{"description":"","displayName":"TreeView","methods":[],"props":{"treeData":{"type":{"name":"array"},"required":false,"description":"The treeNodes data Array","defaultValue":{"value":"[]","computed":false}},"nodeSelected":{"type":{"name":"object"},"required":false,"description":"Used to pass default selected node.","defaultValue":{"value":"null","computed":false}},"expandedNodes":{"type":{"name":"object"},"required":false,"description":"Array of objects which stores the expanded node list\nexpected format\n\n```\n{ [uniqueKey] : true , [uniqueNodeKey] : true}\n```\neg :\n\n```\n{ 'node-0': true, 'node-0-1': true }\n```","defaultValue":{"value":"null","computed":false}},"expandedIcon":{"type":{"name":"node"},"required":false,"description":"used to customize expanded icon\neg :\n```\nexpandedIcon: <i className=\"p-hclsw p-hclsw-export\" />\n```","defaultValue":{"value":"null","computed":false}},"collapsedIcon":{"type":{"name":"node"},"required":false,"description":"used to customize collapsed icon\n\neg\n```\ncollapsedIcon: <i className=\"p-hclsw p-hclsw-folder\" />\n```","defaultValue":{"value":"null","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Style class of the component","defaultValue":{"value":"''","computed":false}},"config":{"type":{"name":"object"},"required":false,"description":"Configuration Object for updating propery name in tree data\n\n\n```externalExpandNode``` :  if true, tree component will used expandedNodes props to store expanded nodes\n\nDefault Configuration\n\n```\n{\n   expandIcon: 'expandIcon',\n   collapsedIcon: 'collapsedIcon',\n   icon: 'icon',\n   children: 'children',\n   name: 'name',\n   hasChildren: 'hasChildren',\n   displayChildren:'displayChildren',\n   draggable: 'draggable',\n   key: 'key',\n   externalExpandNode:false\n}\n```\n\nThis is used if the tree data is having a different keys than the default one mentioned above.\n\nif treeData is having **title** instead of **name** can change the config object like below\n\neg :\n\n```\n{\n   name: 'title',\n}\n\n```","defaultValue":{"value":"{}","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'single'","computed":false}]},"required":false,"description":"Type of Treeview\n* ```default``` : Component without any node selection\n* ```single``` : Component with node selection","defaultValue":{"value":"'default'","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback function on selecting a tree node\n\n@signature\n* ```node``` : selected tree node\n* ```event``` : click event","defaultValue":{"value":"null","computed":false}},"onToggle":{"type":{"name":"func"},"required":false,"description":"Callback function on expanding/collapsing tree node.\n\n@signature\n```node``` : toggled tree node","defaultValue":{"value":"null","computed":false}},"iconClass":{"type":{"name":"object"},"required":false,"description":"Used to provide custom icon for node\n\n\n* ```operator``` : operator is any property which exist on each tree node.\n* ```icon``` : this icon display for all node whose type is matching with file.\n* ```expandedIcon``` : this icon display for all node whose \"type\" is matching with \"folder\" and node should be expanded.\n* ```collapsedIcon``` : this icon display for all node whose \"type\" is matching with \"folder\" and node should be collapsed.\n\n\neg:\n\n```\n   {\n       operator: 'type',\n       values: {\n           file: {\n               icon: <i className=\"p-hclsw p-hclsw-document\" />\n           },\n           folder: {\n               expandedIcon: <i className=\"p-hclsw p-hclsw-export\" />,\n               collapsedIcon: <i className=\"p-hclsw p-hclsw-folder\" />\n           }\n       }\n   }\n```\n\ncan use any property present in the node.","defaultValue":{"value":"null","computed":false}},"getIcons":{"type":{"name":"func"},"required":false,"description":"Callback function is used to provide custom icon for node\nThis callback can be used if icon passing logic is complex, or not possible to acheive with the help of ***\"iconClass\"*** props\n\n@signature\n```node``` : tree node","defaultValue":{"value":"null","computed":false}},"overflowOnHover":{"type":{"name":"bool"},"required":false,"description":"used to display overflow menu on hover. This can be used for showing ***\"customActionTemplate\"*** on hover","defaultValue":{"value":"false","computed":false}},"getOverFlowItems":{"type":{"name":"func"},"required":false,"description":"Callback function for setting overflow menu actions\n\nthis function expect below object format.\n eg:\n\n```\n[\n   {name: 'Rename',action: 'edit',icon:<i className=\"p-hclsw p-hclsw-edit\" />}\n   {name: 'Cut',action: 'cut',icon:<i className=\"p-hclsw p-hclsw-edit\" />}\n   {name: 'Copy',action: 'copy',icon:<i className=\"p-hclsw p-hclsw-edit\" />}\n   {name: 'Delete',action: 'delete',icon:<i className=\"p-hclsw p-hclsw-edit\" />}\n]\n```\n\n\n@signature\n```node``` : tree node","defaultValue":{"value":"null","computed":false}},"onOverflowAction":{"type":{"name":"func"},"required":false,"description":"Callback function on selecting overflow menu items.\nThis function mainly used to write logic on custom overlflow menu action. This method is used for *copy* and *cut* overflow action.\n* need to make a reference copy of model on copy action from overflow menu and that model should be returned from this call back\n* All the other custom overflow action, in which tree node is changed, need to return that changed tree node from the function\n\n@signature\n* ```action``` : Overflow Action name.\n* ```node``` : Tree Node","defaultValue":{"value":"null","computed":false}},"onDeleteNode":{"type":{"name":"func"},"required":false,"description":"Callback function on deleting tree node from overflow menu.\n\nthis function expect a boolean value. If true node will get deleted.\n\n```\nonDeleteNode = { async () => true}\n\n```\n\n@signature\nnode : tree node","defaultValue":{"value":"null","computed":false}},"onRenamingNode":{"type":{"name":"func"},"required":false,"description":"Callback function on renaming tree node from overflow menu\n\nthis function expect an array.\n* ```[true]``` : the node will get renamed\n* ```[false , error_message]``` : error message will be shown as an overlay\n* ```error_message``` : it can be an html element\n\n@signature\nnode : tree node","defaultValue":{"value":"null","computed":false}},"isMoveNodeAllowed":{"type":{"name":"func"},"required":false,"description":"Callback function used for specifying rules on cut and paste\n@signature\n* ```cutNode``` : cut node\n* ```pasteNode``` : node where paste action validation checks\n* ```treeData``` : Tree Data","defaultValue":{"value":"null","computed":false}},"onMoveNode":{"type":{"name":"func"},"required":false,"description":"Callback function on cut paste action or drag and drop\nthis will trigger before the drop or paste action\n@signature\n* ```cutNode``` : cut node\n* ```pasteNode``` : node where paste action happening","defaultValue":{"value":"null","computed":false}},"onCopyNode":{"type":{"name":"func"},"required":false,"description":"Callback function on copy paste action\nthis will trigger before the paste action after copying a node\n@signature\n* ```copiedNode``` : copied Node\n* ```pasteNode```: node where paste action happening","defaultValue":{"value":"null","computed":false}},"isCopyAllowed":{"type":{"name":"func"},"required":false,"description":"Callback function used for specifying rules on copy and paste\nexpect a boolean value. Paste button will be enabled if it returns true\n@signature\n* ```copiedNode``` : copied Node\n* ```pasteNode``` : node where paste action happening\n* ```treeData``` : Tree Data","defaultValue":{"value":"null","computed":false}},"onActionCompletes":{"type":{"name":"func"},"required":false,"description":"Callback function after completing the overflow action or drag and drop\n@signature\n* ```action``` : action name\n* ```treeData``` : Tree Data\n* ```updatedNode``` : this can be renamed node, dragged node , cut/copy node or deleted node\n* ```drop/paste node``` : this can be the node in which dragged or cut or copied node pasted","defaultValue":{"value":"null","computed":false}},"dragRules":{"type":{"name":"any"},"required":false,"description":"Used to specify draggable node\n\n```\n{\noperator: 'type', // operator is any property which exist on each tree node.\n  values: {\n    file: true, // node with type \"file\" is draggable\n    folder: false // // node with type \"folder\" is not draggable\n  }\n}\n```","defaultValue":{"value":"null","computed":false}},"isDraggable":{"type":{"name":"func"},"required":false,"description":"Callback function is used to define whether the node is draggable\nThis callback can be used if node draggable logic is complex, or not possible to acheive with the help of \"dragRules\" props\n@signature\n```node``` : tree node","defaultValue":{"value":"null","computed":false}},"draggable":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'internal'","computed":false},{"value":"'external'","computed":false}]},"required":false,"description":"Used for setting drag and drop behaviour for the tree component\n* ```none``` : default value. There is no dragging functionality\n* ```internal``` : Internal drag and drop functionality will be set. Need to define isDropAllowed call back function inorder to specify the drag and drop rules\n* ```external``` : Dragging is possible. Need to the write common drag and drop html5 function to add the behaviour","defaultValue":{"value":"'none'","computed":false}},"isDropAllowed":{"type":{"name":"func"},"required":false,"description":"Callback function is used to validate the drop region on drag and drop\nexpect an array of boolean value\neg :\n\n```\n[canDropInside , canDropInSameLevel]\n```\n* ```canDropInside``` : true mean dragged node can be placed as children of dropNode\n* ```canDropInSameLevel``` : true mean dragged node can be placed above or below the dropNode\n\n@signature\n* ```draggedNode``` : dragged Node\n* ```dropNode``` : Mouse Over Node\n* ```parentNode``` : parent node of Mouse Over Node\n* ```treeData``` : tree Data","defaultValue":{"value":"null","computed":false}},"onDragStart":{"type":{"name":"func"},"required":false,"description":"Callback function to add custom drag start function\nthis will enable only when \"draggable\" prop should set to \"external\"\n@signature\n* ```node``` : node\n* ```parentNode``` :Parent Node\n* ```level``` : node level\n* ```event``` : Event","defaultValue":{"value":"null","computed":false}},"onDragOver":{"type":{"name":"func"},"required":false,"description":"Callback function to add custom drag over function\nthis will enable only when \"draggable\" prop should set to \"external\"\n@signature\n* ```node``` : node\n* ```parentNode``` :Parent Node\n* ```level``` : node level\n* ```event``` : Event","defaultValue":{"value":"null","computed":false}},"onDragEnter":{"type":{"name":"func"},"required":false,"description":"Callback function to add custom drag enter function\nthis will enable only when \"draggable\" prop should set to \"external\"\n@signature\n* ```node``` : node\n* ```parentNode``` :Parent Node\n* ```level``` : node level\n* ```event``` : Event","defaultValue":{"value":"null","computed":false}},"onDragLeave":{"type":{"name":"func"},"required":false,"description":"Callback function to add custom drag leave function\nthis will enable only when \"draggable\" prop should set to \"external\"\n@signature\n* ```node``` : node\n* ```parentNode``` :Parent Node\n* ```level``` : node level\n* ```event``` : Event","defaultValue":{"value":"null","computed":false}},"onDrop":{"type":{"name":"func"},"required":false,"description":"Callback function to add custom drop function\nthis will enable only when \"draggable\" prop should set to \"external\"\n@signature\n* ```node``` : node\n* ```parentNode``` :Parent Node\n* ```level``` : node level\n* ```event``` : Event","defaultValue":{"value":"null","computed":false}},"onDragEnd":{"type":{"name":"func"},"required":false,"description":"Callback function to add custom drag end function\nthis will enable only when \"draggable\" prop should set to \"external\"\n@signature\n* ```node``` : node\n* ```parentNode``` :Parent Node\n* ```level``` : node level\n* ```event``` : Event","defaultValue":{"value":"null","computed":false}},"customTemplate":{"type":{"name":"func"},"required":false,"description":"Callback function used to pass custom template. Only expand/collapse icon will be present.\n@signature\n* ```node``` : node\n* ```parentNode``` :Parent Node\n* ```level``` : node level","defaultValue":{"value":"null","computed":false}},"customActionTemplate":{"type":{"name":"func"},"required":false,"description":"Callback function used to pass custom template which will place in the right end of the node. This is used to define custom action in which can add link,button,overflow menu etc\n@signature\n* ```node``` : node\n* ```parentNode``` :Parent Node\n* ```level``` : node level","defaultValue":{"value":"null","computed":false}},"customNodeTemplate":{"type":{"name":"func"},"required":false,"description":"Callback function used to pass custom template for node content\n@signature\n* ```node``` : node\n* ```parentNode``` :Parent Node\n* ```level``` : node level","defaultValue":{"value":"null","computed":false}},"onDoubleClick":{"type":{"name":"func"},"required":false,"description":"Callback function to add double click function\n\n@signature\n* ```node``` : node\n* ```parentNode``` :Parent Node\n* ```level``` : node level\n* ```event``` : event","defaultValue":{"value":"null","computed":false}},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"Callback function to add keydown function\n\n@signature\n* ```event``` : event\n* ```node``` : node\n* ```parentNode``` :Parent Node\n* ```level``` : node level","defaultValue":{"value":"null","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"Callback function to add on click function\n\n@signature\n* ```node``` : node\n* ```parentNode``` :Parent Node\n* ```level``` : node level\n* ```event``` : event","defaultValue":{"value":"null","computed":false}},"renameNodeId":{"type":{"name":"string"},"required":false,"description":"rename text field will show based on the id","defaultValue":{"value":"null","computed":false}}}},"TreeViewOverflow":{"description":"","displayName":"TreeViewOverflow","methods":[],"props":{"node":{"type":{"name":"object"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"level":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}}}},"Accordion":{"description":"","displayName":"Accordion","methods":[],"props":{"uncontrolled":{"type":{"name":"bool"},"required":false,"description":"Boolean value to set if Accordion is controlled or uncontrolled","defaultValue":{"value":"false","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Name of the custom class to apply to the accordion","defaultValue":{"value":"''","computed":false}},"children":{"type":{"name":"any"},"required":false,"description":"Accordion Items to be added in Accordion","defaultValue":{"value":"''","computed":false}}}},"AccordionItem":{"description":"","displayName":"AccordionItem","methods":[],"props":{"title":{"type":{"name":"node"},"required":false,"description":"Title for the Accordion Item","defaultValue":{"value":"null","computed":false}},"expanded":{"type":{"name":"bool"},"required":false,"description":"* ```True``` : Accordion Item in expanded mode\n* ```False``` : Accordion Item in collapsed mode","defaultValue":{"value":"false","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback function that is invoked when Accordion is expanded or closed.\n\n@signature\n```event``` : click event","defaultValue":{"value":"() => {}","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Name of the custom class to apply to the Accordion Item","defaultValue":{"value":"''","computed":false}}}},"ActionBar":{"description":"","displayName":"ActionBar","methods":[]},"ActionList":{"description":"","displayName":"ActionList","methods":[]},"ActionSummary":{"description":"","displayName":"ActionSummary","methods":[]},"CodeSnippet":{"description":"","displayName":"CodeSnippet","methods":[],"props":{"type":{"type":{"name":"enum","value":[{"value":"'read'","computed":false},{"value":"'edit'","computed":false}]},"required":false,"description":"There are two variants of CodeSnippet: 1) Read  2) Edit. By default read only CodeSnippet will be created.","defaultValue":{"value":"'read'","computed":false}},"width":{"type":{"name":"string"},"required":false,"description":"To set width of CodeSnippet","defaultValue":{"value":"'30rem'","computed":false}},"height":{"type":{"name":"string"},"required":false,"description":"To set height of CodeSnippet","defaultValue":{"value":"'30rem'","computed":false}},"onEdit":{"type":{"name":"func"},"required":false,"description":"Callback funnction which will be triggered on editing CodeSnippet\n\n@signature\n```code``` : snippet code","defaultValue":{"value":"() => {}","computed":false}},"onCopy":{"type":{"name":"func"},"required":false,"description":"Callback funnction which will be triggered on copying CodeSnippet\n\n@signature\n```code``` : snippet code","defaultValue":{"value":"() => {}","computed":false}},"value":{"type":{"name":"string"},"required":false,"description":"Code in CodeSnippet. Wrap the code in *backticks(``)*","defaultValue":{"value":"''","computed":false}},"language":{"type":{"name":"string"},"required":false,"description":"To pass the programming language\nSupported languages are mentioned below","defaultValue":{"value":"'javascript'","computed":false}}}},"ContentSwitcher":{"description":"","displayName":"ContentSwitcher","methods":[],"props":{"activeIndex":{"type":{"name":"number"},"required":false,"description":"Index of the tab to be selected.","defaultValue":{"value":"0","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Accepts event handler as prop/argument.\n\n@signature\n```event```: change event object","defaultValue":{"value":"() => {}","computed":false}},"children":{"type":{"name":"node"},"required":true,"description":"self Children i.e Switch Component."},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of ContentSwitcher","defaultValue":{"value":"''","computed":false}}}},"Switch":{"description":"","displayName":"Switch","methods":[],"props":{"label":{"type":{"name":"string"},"required":false,"description":"Text used to Differentiate Each Switches.","defaultValue":{"value":"''","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"Accepts event handler as prop/argument.","defaultValue":{"value":"() => {}","computed":false}},"isDisabled":{"type":{"name":"bool"},"required":false,"description":"Disables individual Switch","defaultValue":{"value":"false","computed":false}},"icon":{"type":{"name":"element"},"required":false,"description":"An icon tag or <img> tag for rendering the icon.","defaultValue":{"value":"null","computed":false}},"active":{"type":{"name":"bool"},"required":false,"description":"* ```true``` – ‘active’ class is added the switch element\n* ```false``` – ‘active’ is removed from the switch element.","defaultValue":{"value":"false","computed":false}}}},"DateInput":{"description":"","displayName":"DateInput","methods":[],"props":{"dateSelected":{"type":{"name":"string"},"required":true,"description":""},"toggleDateContainer":{"type":{"name":"func"},"required":true,"description":""},"onChangeInputDate":{"type":{"name":"func"},"required":true,"description":""},"isDateSelectedValid":{"type":{"name":"bool"},"required":true,"description":""},"isValidYear":{"type":{"name":"bool"},"required":true,"description":""},"format":{"type":{"name":"string"},"required":true,"description":""},"onEnterPressInputDate":{"type":{"name":"func"},"required":true,"description":""},"datepickerInput":{"type":{"name":"object"},"required":true,"description":""},"currDateObj":{"type":{"name":"object"},"required":false,"description":""},"defaultDate":{"type":{"name":"string"},"required":false,"description":""}}},"DatePanel":{"description":"","displayName":"DatePanel","methods":[],"props":{"currDateObj":{"type":{"name":"object"},"required":true,"description":""},"dateSelected":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"''","computed":false}},"selectDate":{"type":{"name":"func"},"required":true,"description":""},"format":{"type":{"name":"string"},"required":true,"description":""}}},"DatePicker":{"description":"","displayName":"DatePicker","methods":[],"props":{"weekDays":{"type":{"name":"array"},"required":false,"description":"Days in week.  Array input can be on the basis of language selected.","defaultValue":{"value":"['S', 'M', 'T', 'W', 'Th', 'F', 'S']","computed":false}},"months":{"type":{"name":"array"},"required":false,"description":"Months in a year.  Array input can be on the basis of language selected.","defaultValue":{"value":"[\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n]","computed":false}},"format":{"type":{"name":"string"},"required":false,"description":"* ```mm/dd/yyyy``` :  One of the format available.\n* ```dd/mm/yyyy``` : One of the format available.","defaultValue":{"value":"'MM/DD/YYYY'","computed":false}},"onDateSelect":{"type":{"name":"func"},"required":false,"description":"Callback function which will be executed on date selection\n\n@signature\n```date``` : date","defaultValue":{"value":"() => {}","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of DatePicker","defaultValue":{"value":"''","computed":false}},"direction":{"type":{"name":"enum","value":[{"value":"'top-right'","computed":false},{"value":"'top-left'","computed":false},{"value":"'bottom-right'","computed":false},{"value":"'bottom-left'","computed":false}]},"required":false,"description":"Used for defining the position of datepicker","defaultValue":{"value":"'bottom-left'","computed":false}},"attachElementToBody":{"type":{"name":"bool"},"required":false,"description":"Used to attach the datepicker container to body","defaultValue":{"value":"false","computed":false}},"scrollListner":{"type":{"name":"bool"},"required":false,"description":"Date picker Container position will changed on scroll. This is applicable when datepicker container is attached to body","defaultValue":{"value":"false","computed":false}},"label":{"type":{"name":"string"},"required":false,"description":"Label for time picker, if not provided no label will be added.","defaultValue":{"value":"null","computed":false}},"helperText":{"type":{"name":"string"},"required":false,"description":"Specifies helper text","defaultValue":{"value":"null","computed":false}},"id":{"type":{"name":"string"},"required":false,"description":"Unique Id","defaultValue":{"value":"null","computed":false}},"defaultDate":{"type":{"name":"string"},"required":false,"description":"This props allows user to pass default date","defaultValue":{"value":"''","computed":false}}}},"WeekPanel":{"description":"","displayName":"WeekPanel","methods":[],"props":{"weekDays":{"type":{"name":"array"},"required":true,"description":""}}},"YearMonthPanel":{"description":"","displayName":"YearMonthPanel","methods":[],"props":{"months":{"type":{"name":"array"},"required":true,"description":""},"currDateObj":{"type":{"name":"object"},"required":true,"description":""},"monthChangeHandler":{"type":{"name":"func"},"required":true,"description":""},"yearChangeHandler":{"type":{"name":"func"},"required":true,"description":""},"yearSelected":{"type":{"name":"string"},"required":true,"description":""},"onChangeYear":{"type":{"name":"func"},"required":true,"description":""},"onEnterPressYear":{"type":{"name":"func"},"required":true,"description":""}}},"DateRangeFooter":{"description":"","displayName":"DateRangeFooter","methods":[],"props":{"onCancel":{"type":{"name":"func"},"required":false,"description":""},"onDone":{"type":{"name":"func"},"required":false,"description":""},"range":{"type":{"name":"any"},"required":false,"description":""}}},"DateRangeInput":{"description":"","displayName":"DateRangeInput","methods":[],"props":{"startDateSelected":{"type":{"name":"string"},"required":false,"description":""},"endDateSelected":{"type":{"name":"string"},"required":false,"description":""},"toggleDateContainer":{"type":{"name":"func"},"required":true,"description":""},"defaultStartDate":{"type":{"name":"string"},"required":false,"description":""},"defaultEndDate":{"type":{"name":"string"},"required":false,"description":""},"setShowDateContainer":{"type":{"name":"func"},"required":false,"description":""},"setIsStartDateSelectedValid":{"type":{"name":"func"},"required":true,"description":""},"setIsEndDateSelectedValid":{"type":{"name":"func"},"required":true,"description":""},"format":{"type":{"name":"string"},"required":true,"description":""},"setStartDateSelected":{"type":{"name":"func"},"required":true,"description":""},"setEndDateSelected":{"type":{"name":"func"},"required":true,"description":""},"updateFormattedDate":{"type":{"name":"func"},"required":true,"description":""},"datepickerStartInput":{"type":{"name":"object"},"required":true,"description":""},"datepickerEndInput":{"type":{"name":"object"},"required":true,"description":""},"onDateRangeSelect":{"type":{"name":"func"},"required":false,"description":""},"isStartDateSelectedValid":{"type":{"name":"bool"},"required":false,"description":""},"isEndDateSelectedValid":{"type":{"name":"bool"},"required":false,"description":""}}},"DateRangeSelector":{"description":"","displayName":"DateRangeSelector","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"To set id on parent div of DateSelector Component","defaultValue":{"value":"null","computed":false}},"weekDays":{"type":{"name":"array"},"required":false,"description":"Days in week.  Array input can be on the basis of language selected.","defaultValue":{"value":"['S', 'M', 'T', 'W', 'Th', 'F', 'S']","computed":false}},"months":{"type":{"name":"array"},"required":false,"description":"Months in a year.  Array input can be on the basis of language selected.","defaultValue":{"value":"[\n  'JAN',\n  'FEB',\n  'MAR',\n  'APR',\n  'MAY',\n  'JUN',\n  'JUL',\n  'AUG',\n  'SEP',\n  'OCT',\n  'NOV',\n  'DEC'\n]","computed":false}},"format":{"type":{"name":"string"},"required":false,"description":"* ```mm/dd/yyyy``` :  One of the format available.\n* ```dd/mm/yyyy``` : One of the format available.","defaultValue":{"value":"'MM/DD/YYYY'","computed":false}},"onDateRangeSelect":{"type":{"name":"func"},"required":false,"description":"Callback function which will be executed on date range selection\n\n@signature\n```date``` : selected date","defaultValue":{"value":"() => {}","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"className/clasess will be applied on the parent div of DateRangeSelector","defaultValue":{"value":"''","computed":false}},"direction":{"type":{"name":"enum","value":[{"value":"'top-right'","computed":false},{"value":"'top-left'","computed":false},{"value":"'bottom-right'","computed":false},{"value":"'bottom-left'","computed":false}]},"required":false,"description":"Used for defining the position of DateRangeSelector","defaultValue":{"value":"'bottom-left'","computed":false}},"attachElementToBody":{"type":{"name":"bool"},"required":false,"description":"Used to attach the DateRangeSelector container to body","defaultValue":{"value":"false","computed":false}},"scrollListner":{"type":{"name":"bool"},"required":false,"description":"Date picker Container position will changed on scroll. This is applicable when DateRangeSelector container is attached to body","defaultValue":{"value":"false","computed":false}},"sidePanel":{"type":{"name":"node"},"required":false,"description":"To pass sidepanel node"},"defaultStartDate":{"type":{"name":"any"},"required":false,"description":"This props allows user to pass default start date"},"defaultEndDate":{"type":{"name":"any"},"required":false,"description":"This props allows user to pass default start date"},"minDate":{"type":{"name":"instanceOf","value":"Date"},"required":false,"description":"Min date","defaultValue":{"value":"new Date(1000, 0, 1)","computed":false}},"maxDate":{"type":{"name":"instanceOf","value":"Date"},"required":false,"description":"Max date","defaultValue":{"value":"new Date(9999, 12, 31)","computed":false}}}},"DateSelector":{"description":"","displayName":"DateSelector","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"To set id on parent div of DateSelector Component","defaultValue":{"value":"null","computed":false}},"weekDays":{"type":{"name":"array"},"required":false,"description":"Days in week.  Array input can be on the basis of language selected.","defaultValue":{"value":"['S', 'M', 'T', 'W', 'Th', 'F', 'S']","computed":false}},"months":{"type":{"name":"array"},"required":false,"description":"Months in a year.  Array input can be on the basis of language selected.","defaultValue":{"value":"[\n  'JAN',\n  'FEB',\n  'MAR',\n  'APR',\n  'MAY',\n  'JUN',\n  'JUL',\n  'AUG',\n  'SEP',\n  'OCT',\n  'NOV',\n  'DEC'\n]","computed":false}},"format":{"type":{"name":"string"},"required":false,"description":"* ```mm/dd/yyyy``` :  One of the format available.\n* ```dd/mm/yyyy``` : One of the format available.","defaultValue":{"value":"'mm/dd/yyyy'","computed":false}},"defaultDate":{"type":{"name":"any"},"required":false,"description":"This props allows user to pass default date","defaultValue":{"value":"''","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"className/clasess will be applied on the parent div of DateSelector","defaultValue":{"value":"''","computed":false}},"direction":{"type":{"name":"enum","value":[{"value":"'top-right'","computed":false},{"value":"'top-left'","computed":false},{"value":"'bottom-right'","computed":false},{"value":"'bottom-left'","computed":false}]},"required":false,"description":"Used for defining the position of DateSelector","defaultValue":{"value":"'bottom-left'","computed":false}},"scrollListner":{"type":{"name":"bool"},"required":false,"description":"Date picker Container position will changed on scroll. This is applicable when DateSelector container is attached to body","defaultValue":{"value":"false","computed":false}},"attachElementToBody":{"type":{"name":"bool"},"required":false,"description":"Used to attach the DateSelector container to body","defaultValue":{"value":"false","computed":false}},"sidePanel":{"type":{"name":"node"},"required":false,"description":"To pass sidepanel node","defaultValue":{"value":"null","computed":false}},"onDateSelect":{"type":{"name":"func"},"required":false,"description":"Callback function which will be executed on date selection\n\n\n@signature\n```date``` : selected date","defaultValue":{"value":"() => {}","computed":false}},"minDate":{"type":{"name":"instanceOf","value":"Date"},"required":false,"description":"Min date","defaultValue":{"value":"new Date(1000, 0, 1)","computed":false}},"maxDate":{"type":{"name":"instanceOf","value":"Date"},"required":false,"description":"Max date","defaultValue":{"value":"new Date(9999, 12, 31)","computed":false}},"onVisibleChange":{"type":{"name":"func"},"required":false,"description":"Callback on Calendar toggle\n\n@signature\n```isOpen``` : boolean flag","defaultValue":{"value":"null","computed":false}}}},"DateSelectorInput":{"description":"","displayName":"DateSelectorInput","methods":[],"props":{"format":{"type":{"name":"string"},"required":true,"description":""},"dateSelected":{"type":{"name":"string"},"required":true,"description":""},"toggleDateContainer":{"type":{"name":"func"},"required":true,"description":""},"datepickerInput":{"type":{"name":"object"},"required":true,"description":""},"defaultDate":{"type":{"name":"string"},"required":true,"description":""},"setDateSelected":{"type":{"name":"func"},"required":true,"description":""},"updateFormattedDate":{"type":{"name":"func"},"required":true,"description":""},"setShowDateContainer":{"type":{"name":"func"},"required":true,"description":""},"setIsDateSelectedValid":{"type":{"name":"func"},"required":true,"description":""},"className":{"type":{"name":"string"},"required":true,"description":""}}},"PanelBottom":{"description":"","displayName":"PanelBottom","methods":[],"props":{"view":{"type":{"name":"string"},"required":true,"description":""},"setView":{"type":{"name":"func"},"required":true,"description":""},"currDateObj":{"type":{"name":"object"},"required":true,"description":""},"setCurrDateObj":{"type":{"name":"func"},"required":true,"description":""},"onDateSelection":{"type":{"name":"func"},"required":false,"description":""},"dateSelected":{"type":{"name":"string"},"required":false,"description":""},"format":{"type":{"name":"string"},"required":true,"description":""},"panelType":{"type":{"name":"string"},"required":false,"description":""},"startDateSelected":{"type":{"name":"string"},"required":false,"description":""},"endDateSelected":{"type":{"name":"string"},"required":false,"description":""},"months":{"type":{"name":"any"},"required":false,"description":""},"minDate":{"type":{"name":"instanceOf","value":"Date"},"required":false,"description":""},"maxDate":{"type":{"name":"instanceOf","value":"Date"},"required":false,"description":""}}},"PanelHeader":{"description":"","displayName":"PanelHeader","methods":[],"props":{"view":{"type":{"name":"string"},"required":true,"description":""},"setView":{"type":{"name":"func"},"required":true,"description":""},"currDateObj":{"type":{"name":"object"},"required":true,"description":""},"setCurrDateObj":{"type":{"name":"func"},"required":true,"description":""},"months":{"type":{"name":"array"},"required":true,"description":""},"weekDays":{"type":{"name":"array"},"required":false,"description":""},"minDate":{"type":{"name":"instanceOf","value":"Date"},"required":false,"description":""},"maxDate":{"type":{"name":"instanceOf","value":"Date"},"required":false,"description":""}}},"SelectPanel":{"description":"","displayName":"SelectPanel","methods":[],"props":{"currDateObj":{"type":{"name":"object"},"required":true,"description":""},"setCurrDateObj":{"type":{"name":"func"},"required":true,"description":""},"format":{"type":{"name":"string"},"required":true,"description":""},"onDateSelection":{"type":{"name":"func"},"required":true,"description":""},"dateSelected":{"type":{"name":"string"},"required":false,"description":""},"months":{"type":{"name":"array"},"required":true,"description":""},"panelType":{"type":{"name":"string"},"required":false,"description":""},"startDateSelected":{"type":{"name":"string"},"required":false,"description":""},"endDateSelected":{"type":{"name":"string"},"required":false,"description":""},"className":{"type":{"name":"string"},"required":false,"description":""},"range":{"type":{"name":"any"},"required":false,"description":""},"weekDays":{"type":{"name":"any"},"required":false,"description":""},"minDate":{"type":{"name":"instanceOf","value":"Date"},"required":false,"description":""},"maxDate":{"type":{"name":"instanceOf","value":"Date"},"required":false,"description":""}}},"FileUploader":{"description":"","displayName":"FileUploader","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"Unique id for File Uploader","defaultValue":{"value":"null","computed":false}},"name":{"type":{"name":"string"},"required":false,"description":"Name of uploading file","defaultValue":{"value":"''","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Name of the custom class to apply to the File Uploader Button\neg:\n\n* ```Primary``` : 'hcl-btn hcl-primary',\n* ```Primary Danger``` : 'hcl-btn hcl-primary hcl-danger',\n* ```Primary Danger Small``` : 'hcl-btn hcl-primary hcl-danger hcl-sm',\n* ```Primary Small``` : 'hcl-btn hcl-primary hcl-sm',\n* ```Secondary``` : 'hcl-btn hcl-secondary',\n* ```Secondary Danger``` : 'hcl-btn hcl-secondary hcl-danger',\n* ```Secondary Danger Small``` : 'hcl-btn hcl-secondary hcl-danger hcl-sm',\n* ```Ghost``` : 'hcl-btn hcl-ghost'","defaultValue":{"value":"''","computed":false}},"label":{"type":{"name":"string"},"required":false,"description":"Label for File Uploader","defaultValue":{"value":"''","computed":false}},"children":{"type":{"name":"any"},"required":false,"description":"Children of File Uploader button","defaultValue":{"value":"null","computed":false}},"description":{"type":{"name":"string"},"required":false,"description":"Description of File Uploader","defaultValue":{"value":"''","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Boolean value to disable File Uploader","defaultValue":{"value":"false","computed":false}},"multiple":{"type":{"name":"bool"},"required":false,"description":"Boolean value to select Multiple files from File Uploader","defaultValue":{"value":"false","computed":false}},"fileType":{"type":{"name":"string"},"required":false,"description":"File type for File Uploader","defaultValue":{"value":"''","computed":false}},"tabIndex":{"type":{"name":"number"},"required":false,"description":"Tab Index for File Uploader","defaultValue":{"value":"0","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Call back function that is invoked when File Uploader is clicked\n\n@signature\n* ```filename``` : filename\n* ```event``` : click event","defaultValue":{"value":"() => {}","computed":false}},"hideFile":{"type":{"name":"bool"},"required":false,"description":"Boolean value to hide or show file names selected from File Uploader","defaultValue":{"value":"false","computed":false}},"required":{"type":{"name":"bool"},"required":false,"description":"Boolean value, if true, files must be present before submitting the form","defaultValue":{"value":"false","computed":false}}}},"Footer":{"description":"","displayName":"Footer","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Custom class for Footer Component","defaultValue":{"value":"''","computed":false}},"caption":{"type":{"name":"string"},"required":false,"description":"Caption for Footer Component","defaultValue":{"value":"''","computed":false}},"links":{"type":{"name":"array"},"required":false,"description":"List of links for Footer Component","defaultValue":{"value":"[]","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"Callback function for on click of links in Footer Component\n\n@signature\n```event``` : click event","defaultValue":{"value":"() => {}","computed":false}}}},"Header":{"description":"","displayName":"Header","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Name of the custom class to apply to the header","defaultValue":{"value":"''","computed":false}},"logo":{"type":{"name":"node"},"required":false,"description":"Logo for header","defaultValue":{"value":"null","computed":false}},"icons":{"type":{"name":"array"},"required":false,"description":"Icons for Header","defaultValue":{"value":"[]","computed":false}},"searchComponent":{"type":{"name":"node"},"required":false,"description":"Search component for Header","defaultValue":{"value":"null","computed":false}}}},"Modal":{"description":"","displayName":"Modal","methods":[],"props":{"type":{"type":{"name":"string"},"required":false,"description":"* ```Default``` : To create success modal\n* ```Danger``` : To create danger modal.","defaultValue":{"value":"'default'","computed":false}},"label":{"type":{"name":"string"},"required":false,"description":"To create label of the modal.","defaultValue":{"value":"''","computed":false}},"heading":{"type":{"name":"string"},"required":false,"description":"To create heading of the modal.","defaultValue":{"value":"''","computed":false}},"showClose":{"type":{"name":"bool"},"required":false,"description":"To toggle close button of the modal.","defaultValue":{"value":"true","computed":false}},"onClose":{"type":{"name":"func"},"required":false,"description":"A callback function which will be executed once modal is closed.\n\n@signature\n```event``` :  close event","defaultValue":{"value":"() => {}","computed":false}},"actions":{"type":{"name":"arrayOf","value":{"name":"shape","value":{"label":{"name":"string","required":false},"handler":{"name":"func","required":false},"primary":{"name":"custom","raw":"PropDeprecated(\n  PropTypes.bool,\n  'please use type prop instead of passing primary'\n)","required":false},"danger":{"name":"custom","raw":"PropDeprecated(\n  PropTypes.bool,\n  'please use type prop instead of passing danger'\n)","required":false},"warning":{"name":"custom","raw":"PropDeprecated(\n  PropTypes.bool,\n  'please use type prop instead of passing warning'\n)","required":false},"neutral":{"name":"custom","raw":"PropDeprecated(\n  PropTypes.bool,\n  'please use type prop instead of passing neutral'\n)","required":false},"disabled":{"name":"bool","required":false},"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'primary-danger'","computed":false},{"value":"'secondary'","computed":false},{"value":"'secondary-danger'","computed":false},{"value":"'ghost'","computed":false},{"value":"'neutral'","computed":false},{"value":"'warning'","computed":false}],"required":false}}}},"required":false,"description":"To create action items associated with modal.\n\n* ```label``` : button label,\n* ```handler``` : function to handle onClick,\n* ```primary``` : bool,\n* ```danger``` : bool,\n* ```disabled``` : bool,\n* ```warning``` : bool,\n* ```neutral``` : bool,\n* ```type``` : type of button","defaultValue":{"value":"[]","computed":false}},"children":{"type":{"name":"node"},"required":true,"description":"To pass content to modal."},"resizeable":{"type":{"name":"bool"},"required":false,"description":"Resize the modal"},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of Modal","defaultValue":{"value":"''","computed":false}},"keyboard":{"type":{"name":"bool"},"required":false,"description":"Closes the modal when escape key is pressed","defaultValue":{"value":"true","computed":false}}}},"NumberInput":{"description":"","displayName":"NumberInput","methods":[],"props":{"defaultValue":{"type":{"name":"number"},"required":false,"description":"Specifies the default value","defaultValue":{"value":"0","computed":false}},"helperText":{"type":{"name":"string"},"required":false,"description":"Specifies helper text","defaultValue":{"value":"null","computed":false}},"id":{"type":{"name":"string"},"required":false,"description":"Unique Id","defaultValue":{"value":"''","computed":false}},"label":{"type":{"name":"string"},"required":false,"description":"Title for the Number Input","defaultValue":{"value":"null","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Disables the  Number Input","defaultValue":{"value":"false","computed":false}},"max":{"type":{"name":"number"},"required":false,"description":"Specifies the maximum value allowed","defaultValue":{"value":"null","computed":false}},"min":{"type":{"name":"number"},"required":false,"description":"Specifies the minimum value allowed","defaultValue":{"value":"null","computed":false}},"step":{"type":{"name":"number"},"required":false,"description":"Specifies the number intervals","defaultValue":{"value":"null","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of Number Input","defaultValue":{"value":"''","computed":false}},"required":{"type":{"name":"bool"},"required":false,"description":"Specifies the number is required or not","defaultValue":{"value":"false","computed":false}},"errorMessage":{"type":{"name":"object"},"required":false,"description":"Used for passing error message","defaultValue":{"value":"{\n  required: null,\n  max: null,\n  min: null\n}","computed":false}}}},"MenuItem":{"description":"","displayName":"MenuItem","methods":[],"props":{"item":{"type":{"name":"any"},"required":false,"description":"Item will return on click of the Menu Item","defaultValue":{"value":"{}","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"@ignore","defaultValue":{"value":"() => {}","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Used to disable the menu item","defaultValue":{"value":"false","computed":false}},"danger":{"type":{"name":"bool"},"required":false,"description":"Used to apply danger style to menu item","defaultValue":{"value":"false","computed":false}},"separator":{"type":{"name":"bool"},"required":false,"description":"Used to add a separator in menu item","defaultValue":{"value":"false","computed":false}},"children":{"type":{"name":"any"},"required":false,"description":"Used to pass children","defaultValue":{"value":"null","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Used to pass custom classname","defaultValue":{"value":"''","computed":false}},"link":{"type":{"name":"string"},"required":false,"description":"Used to pass the link. It will redirect to the link on click","defaultValue":{"value":"null","computed":false}}}},"Overflowmenu":{"description":"","displayName":"Overflowmenu","methods":[],"props":{"direction":{"type":{"name":"enum","value":[{"value":"'top-right'","computed":false},{"value":"'top-left'","computed":false},{"value":"'bottom-right'","computed":false},{"value":"'bottom-left'","computed":false}]},"required":false,"description":"Left: To open overflow menu in left direction. \n  Right: To open overflow menu in right direction","defaultValue":{"value":"'bottom-left'","computed":false}},"children":{"type":{"name":"any"},"required":false,"description":"overflow content","defaultValue":{"value":"null","computed":false}},"listItems":{"type":{"name":"array"},"required":false,"description":"List of the item and associated actions, which should be part of menu.","defaultValue":{"value":"null","computed":false}},"ellipsisType":{"type":{"name":"enum","value":[{"value":"'vertical'","computed":false},{"value":"'horizontal'","computed":false}]},"required":false,"description":"* ```Horizontal``` : To make ellipsis horizontal.\n* ```Vertical``` : To make ellipsis vertical.","defaultValue":{"value":"'vertical'","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"Callback function on selecting item\n\n\n@signature\n* ```value``` : selected menu object\n* ```event``` : click event","defaultValue":{"value":"() => {}","computed":false}},"attachElementToBody":{"type":{"name":"bool"},"required":false,"description":"Used to attach the overlay container to body","defaultValue":{"value":"false","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of OverflowMenu","defaultValue":{"value":"''","computed":false}},"customTemplate":{"type":{"name":"element"},"required":false,"description":"Used to pass custom template","defaultValue":{"value":"null","computed":false}},"customIcon":{"type":{"name":"element"},"required":false,"description":"Used to pass custom icon template.","defaultValue":{"value":"null","computed":false}},"scrollListner":{"type":{"name":"bool"},"required":false,"description":"Overflow Container position will changed on scroll. This is applicable when overflow container is attached to body","defaultValue":{"value":"false","computed":false}}}},"RichTextEditor":{"description":"","displayName":"RichTextEditor","methods":[],"props":{"config":{"type":{"name":"arrayOf","value":{"name":"shape","value":{"type":{"name":"enum","value":[{"value":"'bold'","computed":false},{"value":"'italic'","computed":false},{"value":"'underline'","computed":false},{"value":"'bulletlist'","computed":false},{"value":"'numberlist'","computed":false},{"value":"'link'","computed":false}],"required":false}}}},"required":false,"description":"Icons for toolbar [bold, underline,italic,ordered list, unordered list, link]","defaultValue":{"value":"[]","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"A callback function which will be executed on editor change.\n@signature\n* ```htmlContent``` : text content from text editor\n* ```delta``` : delta object","defaultValue":{"value":"() => {}","computed":false}},"value":{"type":{"name":"string"},"required":false,"description":"content for text editor field.(Can pass string or html)","defaultValue":{"value":"''","computed":false}},"visitLinktext":{"type":{"name":"string"},"required":false,"description":"visit link text value","defaultValue":{"value":"'Visit URL :'","computed":false}},"linkText":{"type":{"name":"string"},"required":false,"description":"url link text value","defaultValue":{"value":"'URL :'","computed":false}},"errorMessage":{"type":{"name":"any"},"required":false,"description":"Error message content which has to be displayed.","defaultValue":{"value":"'Invalid URL'","computed":false}}}},"Sidebar":{"description":"","displayName":"Sidebar","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Name of the custom class to apply to the Sidebar","defaultValue":{"value":"''","computed":false}},"activeLink":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"used to set default active link\neg :\n Active link is set to string or number based on **activeLinkProperty** value\n```\nactiveLink: '1'\n```","defaultValue":{"value":"null","computed":false}},"activeLinkProperty":{"type":{"name":"string"},"required":false,"description":"Setting active link property","defaultValue":{"value":"'href'","computed":false}},"sidebarLinkTemplate":{"type":{"name":"any"},"required":false,"description":"used to pass custom template in sidebar link","defaultValue":{"value":"null","computed":false}},"expanded":{"type":{"name":"bool"},"required":false,"description":"Accepts boolean value to make sidebar expanded or collapse","defaultValue":{"value":"false","computed":false}},"title":{"type":{"name":"string"},"required":false,"description":"Title for the Sidebar","defaultValue":{"value":"''","computed":false}},"items":{"type":{"name":"array"},"required":false,"description":"Content for Sidebar","defaultValue":{"value":"[]","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Boolean value to disable Sidebar","defaultValue":{"value":"false","computed":false}},"headerPosition":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'bottom'","computed":false}]},"required":false,"description":"Position of sidebar header eg: top | bottom","defaultValue":{"value":"'top'","computed":false}},"headerVisible":{"type":{"name":"bool"},"required":false,"description":"Sidebar Header Visibility","defaultValue":{"value":"true","computed":false}},"headerBranding":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'primary'","computed":false}]},"required":false,"description":"Sidebar Header color change eg: default | primary","defaultValue":{"value":"'default'","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'internal'","computed":false}]},"required":false,"description":"Types of sidebar eg: default | primary","defaultValue":{"value":"'default'","computed":false}},"icon":{"type":{"name":"element"},"required":false,"description":"Icon for Sidebar Header","defaultValue":{"value":"null","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"Callback function that is invoked when Sidebar link is clicked\n\n@signature\n* ```item``` : sidebar link\n* ```event``` : click event","defaultValue":{"value":"() => {}","computed":false}},"responsive":{"type":{"name":"bool"},"required":false,"description":"Making sidebar responsive","defaultValue":{"value":"true","computed":false}},"toggleSidebar":{"type":{"name":"func"},"required":false,"description":"Callback function that is invoked when Sidebar Toggled\n\n@signature\n* ```argument``` : toggleStatus\n* ```event``` : click event","defaultValue":{"value":"() => {}","computed":false}}}},"Backdrop":{"description":"","displayName":"Backdrop","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"''","computed":false}}}},"Tab":{"description":"","displayName":"Tab","methods":[],"props":{"label":{"type":{"name":"string"},"required":false,"description":"Text used to Differentiate Each Tab.","defaultValue":{"value":"''","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"custom className for the Tab","defaultValue":{"value":"''","computed":false}},"isDisabled":{"type":{"name":"bool"},"required":false,"description":"Disables Tab if 'true'","defaultValue":{"value":"false","computed":false}},"active":{"type":{"name":"bool"},"required":false,"description":"* ```true``` : ‘active’ class is added to the current element\n* ```false``` : ‘active’ is removed from the current element.","defaultValue":{"value":"true","computed":false}}}},"Tabs":{"description":"","displayName":"Tabs","methods":[],"props":{"activeIndex":{"type":{"name":"number"},"required":false,"description":"Index of the tab to be selected.","defaultValue":{"value":"0","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Accepts event handler as prop/argument. The event object passed has 'label' and 'tabIndex' keys which is used to get the current name and index of the Tab respectively.","defaultValue":{"value":"() => {}","computed":false}},"children":{"type":{"name":"node"},"required":true,"description":"self Children i.e Tab Component."}}},"TimePicker":{"description":"","displayName":"TimePicker","methods":[],"props":{"timeZones":{"type":{"name":"array"},"required":false,"description":"Array of possible timezones"},"label":{"type":{"name":"string"},"required":false,"description":"Label for time picker, if not provided no label will be added.","defaultValue":{"value":"null","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback function which is executed when any change is made in time input.\n\n@signature\n```object``` : period, time, timezone value","defaultValue":{"value":"() => {}","computed":false}},"errorMessage":{"type":{"name":"string"},"required":false,"description":"Error message content which has to be displayed.","defaultValue":{"value":"null","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Class/clasess will be applied on the parent div of TimePicker","defaultValue":{"value":"''","computed":false}},"id":{"type":{"name":"string"},"required":false,"description":"Unique Id","defaultValue":{"value":"null","computed":false}},"helperText":{"type":{"name":"string"},"required":false,"description":"Specifies helper text","defaultValue":{"value":"null","computed":false}},"defaultTime":{"type":{"name":"shape","value":{"time":{"name":"string","required":false},"period":{"name":"any","required":false},"timezone":{"name":"string","required":false}}},"required":false,"description":"This prop allows user to pass default time\n\n* ```time``` : time\n* ```period``` : AM,PM\n* ```timezone``` :timezone values\n\neg:\n```\n{\n   time: '12:00',\n   period: 'AM',\n   timezone: 'Timezone 1'\n}\n```","defaultValue":{"value":"{\n  time: '',\n  period: '',\n  timezone: ''\n}","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'hh'","computed":false},{"value":"'HH'","computed":false}]},"required":false,"description":"Used to specify the type of time picker\n\n* ```hh``` : 12hours clock\n* ```HH``` : 24hours clock","defaultValue":{"value":"'hh'","computed":false}},"labelHH":{"type":{"name":"string"},"required":false,"description":"Label used for 24hours clock","defaultValue":{"value":"''","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Disables the  Time Picker","defaultValue":{"value":"false","computed":false}}}},"ToolBar":{"description":"","displayName":"ToolBar","methods":[]},"ToolBarActions":{"description":"","displayName":"ToolBarActions","methods":[]},"Step":{"description":"","displayName":"Step","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Name of the custom class to be applied to the Step.","defaultValue":{"value":"''","computed":false}},"active":{"type":{"name":"bool"},"required":false,"description":"* ```true``` : ‘active’ class is added the Step.\n* ```false``` : ‘active’ is removed from the Step.","defaultValue":{"value":"false","computed":false}},"status":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'error'","computed":false},{"value":"'completed'","computed":false}]},"required":false,"description":"status of the Step. It can be of - 'default', 'error', 'completed'","defaultValue":{"value":"'default'","computed":false}},"title":{"type":{"name":"string"},"required":false,"description":"Title for the Step","defaultValue":{"value":"''","computed":false}},"description":{"type":{"name":"string"},"required":false,"description":"Description for the Step","defaultValue":{"value":"''","computed":false}},"activeIcon":{"type":{"name":"node"},"required":false,"description":"An active Icon which can be given to each Step - It can be of image, svg, font icons","defaultValue":{"value":"activeUser","computed":true}},"errorIcon":{"type":{"name":"node"},"required":false,"description":"An error Icon which can be given to each Step - It can be of image, svg, font icons","defaultValue":{"value":"Error","computed":true}},"completedIcon":{"type":{"name":"node"},"required":false,"description":"A completed Icon which can be given to each Step - It can be of image, svg, font icons","defaultValue":{"value":"CheckMark","computed":true}},"defaultIcon":{"type":{"name":"node"},"required":false,"description":"Default Icon which can be given to each Step - It can be of image, svg, font icons","defaultValue":{"value":"User","computed":true}},"linear":{"type":{"name":"bool"},"required":false,"description":"@ignore","defaultValue":{"value":"true","computed":false}},"stepcallBack":{"type":{"name":"func"},"required":false,"description":"@ignore","defaultValue":{"value":"null","computed":false}},"iconType":{"type":{"name":"enum","value":[{"value":"'icon'","computed":false},{"value":"'number'","computed":false},{"value":"'noicon'","computed":false}]},"required":false,"description":"@ignore","defaultValue":{"value":"'icon'","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"Event to subscribe when Step is clicked.\n\n@signature\n```event``` : click","defaultValue":{"value":"() => {}","computed":false}}}},"Wizard":{"description":"","displayName":"Wizard","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"Name of the custom class to be applied to the Step.","defaultValue":{"value":"''","computed":false}},"activeIndex":{"type":{"name":"number"},"required":false,"description":"Index of the Step to be selected in Wizard.","defaultValue":{"value":"null","computed":false}},"linear":{"type":{"name":"bool"},"required":false,"description":"Steps can't be freely navigated until unless Step's prop, status is marked 'completed'.","defaultValue":{"value":"true","computed":false}},"kind":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'medium'","computed":false},{"value":"'mobile'","computed":false}]},"required":false,"description":"Variants of Wizard Styles which can be used","defaultValue":{"value":"'default'","computed":false}},"iconType":{"type":{"name":"enum","value":[{"value":"'icon'","computed":false},{"value":"'number'","computed":false},{"value":"'noicon'","computed":false}]},"required":false,"description":"Icon Types to be be used. It can be 'icon', 'number', 'noicon'","defaultValue":{"value":"'icon'","computed":false}},"currentStepLabel":{"type":{"name":"string"},"required":false,"description":"Only applicable in mobile Variant style of Wizard.","defaultValue":{"value":"''","computed":false}}}}}